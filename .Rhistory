ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "lightgrey"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow", size = 0.2))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow", size = 2))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow", size = 0.01))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow"))
monthly_df <- read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_monthly_2017.csv")
burg_records_df <- read_csv("https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/burglary_records.csv")
View(burg_records_df)
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
View(burg_records_df)
library(sf)
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
View(manc_sf)
names(manc_sf)
hex_sf <- st_read(dsn = "data/geogrid_manc.shp.shp")
hex_sf <- st_read(dsn = "data/geogrid_manc.shp")
hex_sf
names(hex_sf)
names(manc_sf)
library(biscale)
ggplot(data = hex_sf) +
geom_sf(mapping = aes(fill = bi_class)) +
bi_scale_fill(pal = "GrPink", dim = 3)
manc_grid_results_sf <- bi_class(hex_sf, x = incscor, y = brglry_, style = "quantile", dim = 3)
ggplot(data = manc_grid_results_sf) +
geom_sf(mapping = aes(fill = bi_class)) +
bi_scale_fill(pal = "GrPink", dim = 3)
getwd()
# Load packages
library(readr)
library(ggplot2)
# Load data
burglary_df <- read_csv("data/gmp_2017.csv")
View(burglary_df)
# Scatter plot 1
ggplot(data = burglary_df)
# Scatter plot 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count))
# Scatter plot 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
class(burglary_df)
burglary_df
test_df <- read.csv("data/gmp_2017.csv")
test_df
burglary2_df <- read.csv("data/gmp_2017.csv")
View(v)
View(burglary2_df)
library(realxl)
library(readxl)
colour = "Local Authority"
title = "Relationship between income deprivation and burglary victimisation",
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Income deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority")
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Income deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority")
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Income deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority")
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Income deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 3))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Income deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 1))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 1))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = -1))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 0))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 0.5))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 1))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = -0.5))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 1))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 0.5))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 0))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 0, vjust = 0.5))
# Scatter plot 2
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income deprivation score",
y = "Burglary count",
title = "Relationship between income deprivation and burglary victimisation",
caption = "Deprivation score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme(plot.caption = element_text(hjust = 0, vjust = 2))
# Load monthly data
monthly_df <- read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_monthly_2017.csv")
View(monthly_df)
library(tidyr)
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Scatter plot 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary)) +
geom_point()
# Scatter plot 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Scatter plot 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count))
# Scatter plot 3
ggplot() +
geom_point(data = burglary_df, mapping = aes(x = incscore, y = burglary_count))
# Scatter plot 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Scatter plot 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point() +
geom_smooth()
# Scatter plot 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count)) +
geom_smooth()
# Scatter plot 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count)) +
geom_smooth(mapping = aes(x = incscore, y = burglary_count))
View(monthly_df)
# Scatter plot 3
ggplot() +
geom_point(data = burglary_df, mapping = aes(x = incscore, y = burglary_count))
# Scatter plot 3
ggplot() +
geom_point(data = burglary_df, mapping = aes(x = incscore, y = burglary_count))
# Scatter plot 3
ggplot() +
geom_point(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_line(data = monthly_df, mapping = aes(x = Month, y = n, linetype = crime_type))
ggplot
?ggplot
geom_point
library(dplyr)
View(burglary2_df)
View(burglary2_df)
View(monthly_df)
library(readr)
library(sf)
burglary_df <- read_csv("data/burglary_records.csv")
View(burglary_df)
View(burglary_df)
?st_as_sf
burglary_sf <- st_as_sf(x = burglary_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
View(burglary_sf)
library(sf)
ggplot(data = burglary_sf) +
geom_sf()
library(ggplot2)
ggplot(data = burglary_sf) +
geom_sf()
burglary_sf <- st_as_sf(x = burglary_df, coords = c(x = "Longitude", y = "Latitude"), crs = 27700)
ggplot(data = burglary_sf) +
geom_sf()
burglary_sf <- st_as_sf(x = burglary_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
ggplot(data = burglary_sf) +
geom_sf()
burglary_sf <- st_as_sf(x = burglary_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
burglary_bng_sf <- burglary_sf %>%
st_transform(crs = 27700)
burglary_bng_sf
ggplot(data = burglary_bng_sf) +
geom_sf()
burglary_df <- read_csv("data/burglary_records.csv")
burglary_sf <- st_as_sf(x = burglary_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
ggplot(data = burglary_sf) +
geom_sf()
burglary_bng_sf <- burglary_sf %>%
st_transform(crs = 27700)
ggplot(data = burglary_bng_sf) +
geom_sf()
ggplot(data = burglary_bng_sf) +
geom_sf() +
coord_cartesian(crs = 27700)
ggplot(data = burglary_bng_sf) +
geom_sf() +
coord_sf(crs = 27700)
ggplot(data = burglary_bng_sf) +
geom_sf() +
coord_sf(datum = st_crs(crs = 27700))
ggplot(data = burglary_bng_sf) +
geom_sf() +
coord_sf(datum = st_crs(27700))
burglary_df <- read_csv("data/burglary_records.csv")
burglary_sf <- st_as_sf(x = burglary_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
ggplot(data = burglary_sf) +
geom_sf()
burglary_bng_sf <- burglary_sf %>%
st_transform(crs = 27700)
burglary_bng_sf <- burglary_sf %>%
st_transform(crs = 27700)
burglary_bng_sf
ggplot(data = burglary_bng_sf) +
geom_sf()
ggplot(data = burglary_bng_sf) +
geom_sf() +
coord_sf(datum = st_crs(27700))
ggplot(data = burglary_sf) +
geom_sf()
ggplot(data = burglary_sf) +
geom_sf() +
theme_void()
ggplot(data = burglary_sf) +
geom_sf()
ggplot(data = burglary_sf) +
geom_sf() +
theme(axis.text = element_blank())
ggplot(data = burglary_sf) +
geom_sf() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())
# Load packages
library(readr)
library(ggplot2)
library(dplyr)
library(sf)
# Load data
burglary_df <- read_csv("data/gmp_2017.csv")
# Load packages
library(readr)
library(ggplot2)
library(dplyr)
library(sf)
# Load data
burglary_df <- read_csv("data/gmp_2017.csv")
View(burglary_df)
# Bar 1
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci))
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, y = ..prop..))
# Bar 3
burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n())
# Bar 3
burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n()) %>%
mutate(total = sum(count))
# Bar 3
burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n()) %>%
mutate(total = sum(count),
prop = count/total)
# Bar 3
burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n()) %>%
mutate(total = sum(count),
prop = count/total) %>%
ggplot() +
geom_bar(mapping = aes(x = IMDdeci, y = prop))
# Bar 3
burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n()) %>%
mutate(total = sum(count),
prop = count/total) %>%
ggplot() +
geom_bar(mapping = aes(x = IMDdeci, y = prop), stat = "identity")
View(burglary_df)
# Load packages.
library(readr)
# Archive data downloaded January 2012, covering the 3-year period up to and including November 2020.
download.file(url = "https://data.police.uk/data/archive/2020-11.zip", destfile = "data/archive2020-11.zip")
# Unzip.
unzip(zipfile = "data/archive2020-11.zip", exdir = "data")
# List all those 'street' files (rather than outcomes or stop and search) for 2020 and 2019.
list_2020 <- paste("data/", list.files("data", pattern = glob2rx("2020*street.csv"),  recursive=TRUE), sep = "")
list_2019 <- paste("data/", list.files("data", pattern = glob2rx("2019*street.csv"),  recursive=TRUE), sep = "")
data_2020 <- lapply(list_2020, read_csv)
data_2019 <- lapply(list_2019, read_csv)
# Bind each in to data frames. For now, we keep the years separate.
full_data_2020 <- data_2020 %>%
bind_rows() %>%
clean_names() %>%
mutate(year = "2020")
library(dplyr)
library(janitor)
# Bind each in to data frames. For now, we keep the years separate.
full_data_2020 <- data_2020 %>%
bind_rows() %>%
clean_names() %>%
mutate(year = "2020")
full_data_2019
full_data_2019 <- data_2019 %>%
bind_rows() %>%
clean_names() %>%
mutate(year = "2019")
sub_data_agg_2020 <- sub_data_2020 %>%
group_by(crime_type, month, lsoa_code, year) %>%
summarise(crime_count = n()) %>%
ungroup() %>%
complete(crime_type, month, lsoa_code, year, fill = list(crime_count = 0)) # LSOA with 0 get filled in.
sub_data_agg_2019 <- full_data_2019 %>%
drop_na(lsoa_code) %>% # !!!
group_by(crime_type, month, lsoa_code, year) %>% #
summarise(crime_count = n()) %>%
ungroup() %>%
complete(crime_type, month, lsoa_code, year, fill = list(crime_count = 0)) # LSOA with 0 get filled in.
library(tidyr)
sub_data_agg_2019 <- full_data_2019 %>%
drop_na(lsoa_code) %>% # !!!
group_by(crime_type, month, lsoa_code, year) %>% #
summarise(crime_count = n()) %>%
ungroup() %>%
complete(crime_type, month, lsoa_code, year, fill = list(crime_count = 0)) # LSOA with 0 get filled in.
sub_data_agg_2019
length(unique(sub_data_agg_2019$lsoa_code))
full_data_2020
View(sub_data_agg_2019)
33000*12*14
34749*12*14
# You now have 5837832 rows because it's 12 months, 14 crime types, and 34749 LSOA.
34749*12*14
