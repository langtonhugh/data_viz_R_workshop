# Chunk 6
ggplot(data = df1, mapping = aes(x = var1, y = var2)) +
geom_point()
# Chunk 7
ggplot(data = df1, mapping = aes(x = var1, y = var2, colour = var3)) +
geom_point()
# Chunk 8
ggplot(data = df1, mapping = aes(x = var1, y = var2, shape = var3)) +
geom_point()
# Chunk 11
burglary_df <-  read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_2017.csv")
# Chunk 12
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Chunk 13
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point()
# Chunk 14
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point() +
scale_colour_brewer(palette = "Spectral")
# Chunk 15
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point() +
scale_colour_viridis_d() # or scale_colour_viridis_c() for a continuous variable
# Chunk 16
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral")
# Chunk 17
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income score",
y = "Burglary count",
title = "Relationship between income and burglary victimisation",
caption = "Income score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority")
# Chunk 18
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income score",
y = "Burglary count",
title = "Relationship between income and burglary victimisation",
caption = "Income score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme_minimal()
# Chunk 19
ggplot(data = burglary_df) +
geom_histogram(mapping = aes(x = IMDscore))
# Chunk 20
ggplot(data = burglary_df) +
geom_density(mapping = aes(x = IMDscore, group = LAname))
# Chunk 21
ggplot(data = burglary_df) +
geom_density(mapping = aes(x = IMDscore, fill = LAname), alpha = 0.5)
# Chunk 22
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci)))  # convert IMDdeci to a factor on-the-fly
# Chunk 23
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme(legend.position = "bottom")
# Chunk 24
monthly_df <- read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_monthly_2017.csv")
# Chunk 25
ggplot(data = monthly_df, aes(x = as.factor(Month), y = n, group = crime_type, linetype = crime_type)) +
geom_line() +
geom_point()
# Chunk 26
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count)) +
facet_wrap(~LAname)
# Chunk 27
p1 <- ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.7) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income score",
y = "Burglary count",
title = "Relationship between neighbourhood income and burglary victimisation",
subtitle = "Income score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority")
# Chunk 28
p1 + theme_minimal() +                                                                  # Lay down default theme
theme(plot.title   = element_text(colour = "white", size = 10, family = "mono"),  # Title colour, size, font type
plot.subtitle = element_text(colour = "white", size = 6 , family = "mono"), # As above for subtitle
axis.title   = element_text(colour = "white", size = 8 , family = "mono"),  # As above for axis titles
axis.text    = element_text(colour = "white", size = 5 , family = "mono"),  # As above for axis text
legend.text  = element_text(colour = "white", size = 8 , family = "mono"),  # As above, for legend text
axis.ticks   = element_blank(),                                             # Turn off axis ticks
legend.title = element_blank(),                                             # Turn off legend title
panel.grid.minor = element_blank(),                                         # Turn off minor grid lines
panel.grid.major = element_blank(),                                         # Turn off major grid lines
panel.background = element_rect(fill = "grey12", colour = "grey12"),        # Panel background colour
panel.border = element_blank(),                                             # Turn off plot border
plot.background = element_rect(fill = "grey12"),                            # Plot background colour
strip.text = element_text(colour = "white", size = 6, family = "mono"))     # Subtitle specs if using facet_wrap
# Chunk 29
my_theme <- theme_minimal() +                                                                  # Lay down default theme
theme(plot.title   = element_text(colour = "white", size = 10, family = "mono"),  # Title colour, size, font type
plot.subtitle = element_text(colour = "white", size = 6 , family = "mono"), # As above for subtitle
axis.title   = element_text(colour = "white", size = 8 , family = "mono"),  # As above for axis titles
axis.text    = element_text(colour = "white", size = 5 , family = "mono"),  # As above for axis text
legend.text  = element_text(colour = "white", size = 8 , family = "mono"),  # As above, for legend text
axis.ticks   = element_blank(),                                             # Turn off axis ticks
legend.title = element_blank(),                                             # Turn off legend title
panel.grid.minor = element_blank(),                                         # Turn off minor grid lines
panel.grid.major = element_blank(),                                         # Turn off major grid lines
panel.background = element_rect(fill = "grey12", colour = "grey12"),        # Panel background colour
panel.border = element_blank(),                                             # Turn off plot border
plot.background = element_rect(fill = "grey12"),                            # Plot background colour
strip.text = element_text(colour = "white", size = 6, family = "mono"))     # Subtitle specs if using facet_wrap
# Chunk 30
ggplot(data = burglary_df) +
geom_density(mapping = aes(x = IMDscore, fill = LAname), colour = "transparent") +
scale_fill_viridis_d() +
facet_wrap(~LAname) +
my_theme +
theme(legend.position = "none")
names(burglary_df)
burglary_df
install.packages("biscale")
ls()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(readr); library(sf); library(geogrid); library(cowplot)
# Chunk 3
# Load data.
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
# Ensure BNG CRS.
manc_sf <- st_transform(manc_sf, crs = 27700)
# Number of LSOAs.
nrow(manc_sf) # N = 282
# Plot raw boundaries with deprivation deciles.
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci)))
# Chunk 4
manc_grid <- calculate_grid(shape = manc_sf, grid_type = "hexagonal", seed = 1612)
# Chunk 5
plot(manc_grid)
# Chunk 7
manc_grid_results_sf <- st_read("data/geogrid_manc.shp")
# Chunk 8
depriv_orig <- ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(fill = NULL) +
theme(legend.position = "bottom")
depriv_grid <- ggplot(data = manc_grid_results_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(fill = NULL) +
theme(legend.position = "bottom")
plot_grid(depriv_orig, depriv_grid, labels = c("Raw boundaries", "Regular grid"), scale = 0.9)
manc_sf
manc_grid_results_sf <- st_read("data/geogrid_manc.shp")
manc_grid_results_sf
names(manc_grid_results_sf)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(readr); library(sf); library(geogrid); library(cowplot)
# Chunk 3
# Load data.
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
# Ensure BNG CRS.
manc_sf <- st_transform(manc_sf, crs = 27700)
# Number of LSOAs.
nrow(manc_sf) # N = 282
# Plot raw boundaries with deprivation deciles.
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci)))
# Chunk 4
manc_grid <- calculate_grid(shape = manc_sf, grid_type = "hexagonal", seed = 1612)
# Chunk 5
plot(manc_grid)
# Chunk 7
manc_grid_results_sf <- st_read("data/geogrid_manc.shp")
# Chunk 8
depriv_orig <- ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(fill = NULL) +
theme(legend.position = "bottom")
depriv_grid <- ggplot(data = manc_grid_results_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(fill = NULL) +
theme(legend.position = "bottom")
plot_grid(depriv_orig, depriv_grid, labels = c("Raw boundaries", "Regular grid"), scale = 0.9)
# Chunk 9
library(biscale)
# Chunk 10
manc_grid_results_sf <- st_read("data/geogrid_manc.shp")
# Chunk 11
manc_grid_results_sf <- bi_class(manc_grid_results_sf, x = incscor, y = brglry_, style = "quantile", dim = 3)
# Chunk 12
ggplot(data = manc_grid_results_sf) +
geom_sf(mapping = aes(fill = bi_class)) +
bi_scale_fill(pal = "GrPink", dim = 3)
# Chunk 13
my_hexmap <- ggplot(data = manc_grid_results_sf) +
geom_sf(mapping = aes(fill = bi_class), show.legend = FALSE) +
bi_scale_fill(pal = "GrPink", dim = 3) +
theme_void()
my_legend <- bi_legend(pal = "GrPink",
dim = 3,
xlab = "More income deprivation",
ylab = "More burglary",
size = 9)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.65, width = 0.2, height = 0.2,
scale = 1.5)
p1 <- ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.65, width = 0.2, height = 0.2,
scale = 1.5)
p1 +
annotate(geom = "label", x = 1, y = 1, label = "hello")
p1 +
annotate(geom = "label", x = 5, y = 5, label = "hello")
p1 +
annotate(geom = "label", x = 5, y = 5, label = "hello", size = 20)
p1 +
annotate(geom = "label", x = 0.1, y = 0.1, label = "hello", size = 20)
p1 +
annotate(geom = "label", x = 0.5, y = 0.5, label = "hello", size = 20)
p1 +
annotate(geom = "text",
x = 0.5, y = 0.5,
label = "hello",
size = 20)
p1 +
annotate(geom = "text",
x = 0.5, y = 0.5,
label = "hello",
size = 10)
p1 +
annotate(geom = "text",
x = 0.5, y = 0.5,
label = "Low income deprivation \n low burglary",
size = 7)
p1 +
annotate(geom = "text",
x = 0.5, y = 0.5,
label = "Low income deprivation \n low burglary",
size = 3)
p1 +
annotate(geom = "text",
x = 0.3, y = 0.3,
label = "Low income deprivation \n low burglary",
size = 3)
p1 +
annotate(geom = "text",
x = 0.5, y = 0.3,
label = "Low income deprivation \n low burglary",
size = 3)
p1 +
annotate(geom = "text",
x = 0.7, y = 0.3,
label = "Low income deprivation \n low burglary",
size = 3)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n low burglary",
size = 3)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3,
geom = "line",
x = 0.7, xend = 0.5, y = 0.3, yend = 0.4)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "line",
x = 0.7, xend = 0.5, y = 0.3, yend = 0.4)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.7, xend = 0.5, y = 0.3, yend = 0.4)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.6, xend = 0.55, y = 0.3, yend = 0.4)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.6, xend = 0.52, y = 0.3, yend = 0.4)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.52, y = 0.3, yend = 0.4)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.52, y = 0.3, yend = 0.4,
curvature = -0.5)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.6, y = 0.3, yend = 0.4,
curvature = -0.5)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.68, xend = 0.6, y = 0.3, yend = 0.4,
curvature = -0.5)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.58, y = 0.3, yend = 0.4,
curvature = -0.5)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.5)
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3)
arrow = arrow(length = unit(2, "mm"))
arrow = arrow(length = unit(1, "mm"))
arrow = arrow(length = unit(1, "cm"))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "cm"))
arrow = arrow(length = unit(10, "cm"))
arrow = arrow(length = unit(10, "cm"))
arrow = arrow(length = unit(10, "cm"))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(10, "cm")))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "cm")))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(2, "mm")))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.65, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.5, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 1, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 01, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 1, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y =0.9, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.1, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.65, width = 0.2, height = 0.2,
scale = 1.5)
p1 +
annotate(geom = "text",
x = 0.75, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.54, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
p1 +
annotate(geom = "text",
x = 0.75, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.54, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm"))) +
annotate(geom = "text",
x = 0.9, y = 0.8,
label = "High income deprivation \n and high burglary",
size = 3)
