scale_fill_viridis_d() +
theme_bw()
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
getwd()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(readr); library(sf)
# Chunk 2
burg_records_df <- read_csv("https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/burglary_records.csv")
# Chunk 3
burg_records_sf <- st_as_sf(x = burg_records_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
# Chunk 4
knitr::include_graphics("img/proj.png")
# Chunk 5
ggplot(data = burg_records_sf) +
geom_sf()
# Chunk 6
ggplot(data = burg_records_sf) +
geom_sf(mapping = aes(fill = outcome), pch = 21, size = 2) +
scale_fill_viridis_d() +
theme_bw()
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
manc_sf <- st_transform(manc_sf, 4326)
manc_sf
ggplot(data = manc_sf) +
geom_sf()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_))
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_brewer(palette = "Reds")
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(palette = "Reds")
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(palette = "Reds")
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "red")
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "red") +
labs(title = "Burglary concentrations in Manchester",
fill = "count")
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "red") +
labs(title = "Burglary concentrations in Manchester",
fill = "count") +
theme_bw()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = IMDdeci))
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma")
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
theme_void()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(title = "Deprivation deciles in Manchester",
caption = "Lower Super Output Areas",
fill = "decile") +
theme_void()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(title = "Deprivation deciles in Manchester",
caption = "Lower Super Output Areas",
fill = "decile") +
theme_bw()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = as.factor(IMDdeci))) +
scale_fill_viridis_d(option = "magma") +
labs(title = "Deprivation deciles in Manchester",
caption = "Contains OS data / crime data from www.police.uk",
fill = "decile") +
theme_bw()
ggplot() +
geom_sf(data = manc_sf) +
geom_sf(data = burg_records_sf)
ggplot() +
geom_sf(data = burg_records_sf, fill = "transparent") +
geom_sf(data = burg_records_sf)
ggplot() +
geom_sf(data = manc_sf, fill = "transparent") +
geom_sf(data = burg_records_sf)
ggplot() +
geom_sf(data = manc_sf) +
geom_sf(data = burg_records_sf, pch = 0.5)
ggplot() +
geom_sf(data = manc_sf) +
geom_sf(data = burg_records_sf, size = 0.5)
ggplot() +
geom_sf(data = burg_records_sf, size = 0.5, col = "red") +
geom_sf(data = manc_sf, fill = "transparent")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(readr); library(sf)
# Chunk 2
burg_records_df <- read_csv("https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/burglary_records.csv")
# Chunk 3
burg_records_sf <- st_as_sf(x = burg_records_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
# Chunk 4
knitr::include_graphics("img/proj.png")
# Chunk 5
ggplot(data = burg_records_sf) +
geom_sf()
ggplot(data = burg_records_sf) +
geom_sf(mapping = aes(fill = outcome), pch = 21, size = 2) +
scale_fill_viridis_d() +
theme_bw()
ggplot(data = burg_records_sf) +
geom_sf(mapping = aes(fill = outcome), pch = 21, size = 1) +
scale_fill_viridis_d() +
theme_bw()
ggplot(data = burg_records_sf) +
geom_sf(mapping = aes(fill = outcome), pch = 21, size = 2, colour = "transparent") +
scale_fill_viridis_d() +
theme_bw()
ggplot(data = burg_records_sf) +
geom_sf(mapping = aes(fill = outcome), pch = 21, size = 2, colour = "transparent") +
scale_fill_brewer(palette = "Set3") +
theme_bw()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(readr)
# Chunk 2
knitr::include_graphics("img/gg.png")
# Chunk 3
df1 <- data.frame(var1 = c(5, 3, 7, 9, 12),
var2 = c(7, 2, 9, 15, 17),
var3 = c("AA","AA","AA", "BB","BB"))
# Chunk 4
ggplot(data = df1)
# Chunk 5
ggplot(data = df1, mapping = aes(x = var1, y = var2))
# Chunk 6
ggplot(data = df1, mapping = aes(x = var1, y = var2)) +
geom_point()
# Chunk 7
ggplot(data = df1, mapping = aes(x = var1, y = var2, colour = var3)) +
geom_point()
# Chunk 8
ggplot(data = df1, mapping = aes(x = var1, y = var2, shape = var3)) +
geom_point()
# Chunk 11
burglary_df <-  read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_2017.csv")
# Chunk 12
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Chunk 13
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point()
# Chunk 14
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point() +
scale_colour_brewer(palette = "Spectral")
# Chunk 15
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point() +
scale_colour_viridis_d() # or scale_colour_viridis_c() for a continuous variable
# Chunk 16
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral")
# Chunk 17
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income score",
y = "Burglary count",
title = "Relationship between income and burglary victimisation",
caption = "Income score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority")
# Chunk 18
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count, colour = LAname)) +
geom_point(size = 3, alpha = 0.5) +
scale_colour_brewer(palette = "Spectral") +
labs(x = "Income score",
y = "Burglary count",
title = "Relationship between income and burglary victimisation",
caption = "Income score derived from 2019 IMD measure. Burglary counts from 2017",
colour = "Local Authority") +
theme_minimal()
# Chunk 19
ggplot(data = burglary_df) +
geom_histogram(mapping = aes(x = IMDscore))
# Chunk 20
ggplot(data = burglary_df) +
geom_density(mapping = aes(x = IMDscore, group = LAname))
# Chunk 21
ggplot(data = burglary_df) +
geom_density(mapping = aes(x = IMDscore, fill = LAname), alpha = 0.5)
# Chunk 22
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci)))  # convert IMDdeci to a factor on-the-fly
# Chunk 23
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci), fill = LAname), position = "dodge")
# Chunk 24
monthly_df <- read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_monthly_2017.csv")
ggplot(data = monthly_df, aes(x = as.factor(Month), y = n, group = crime_type, linetype = crime_type)) +
geom_line() +
geom_point()
ggplot(data = monthly_df, aes(x = as.factor(Month), y = n, linetype = crime_type)) +
geom_line() +
geom_point()
library(tidyverse)
burglary_df <-  read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_2017.csv")
View(burglary_df)
ggplot(data = burglary_df)
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count))
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count,
colour = LAname)) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count,
shape = LAname)) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count,
colour = LAname)) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count,
colour = LAname) size = 2) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count,
colour = LAname), size = 10) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count,
colour = LAname)) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point() +
geom_smooth()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point() +
geom_smooth(stat = "lm")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", colour = "red")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", colour = "red") +
theme_bw()
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", colour = "red") +
theme_bw() +
labs(title = "Relationship between income and burglary counts")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", colour = "red") +
theme_bw() +
labs(title = "Relationship between income and burglary counts",
x = "income score",
y = "burglary count")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", colour = "red") +
theme_bw() +
labs(title = "Relationship between income and burglary counts",
subtitle = "Crime data from Greater Manchester, 2017"
x = "income score",
y = "burglary count")
ggplot(data = burglary_df,
mapping = aes(x = incscore, y = burglary_count)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", colour = "red") +
theme_bw() +
labs(title = "Relationship between income and burglary counts",
subtitle = "Crime data from Greater Manchester, 2017",
x = "income score",
y = "burglary count")
library(tidyverse)
burglary_df <-  read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_2017.csv")
View(burglary_df)
ggplot(data = burglary_df)
ggplot(data = burglary_df, mapping = aes(x = incscore,
y = burglary_count))
ggplot(data = burglary_df, mapping = aes(x = incscore,
y = burglary_count)) +
geom_point()
ggplot(data = burglary_df, mapping = aes(x = incscore,
y = burglary_count,
colour = LAname)) +
geom_point()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(readr); library(sf)
# Chunk 2
burg_records_df <- read_csv("https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/burglary_records.csv")
# Chunk 3
burg_records_sf <- st_as_sf(x = burg_records_df, coords = c(x = "Longitude", y = "Latitude"), crs = 4326)
# Chunk 4
knitr::include_graphics("img/proj.png")
# Chunk 5
ggplot(data = burg_records_sf) +
geom_sf()
# Chunk 6
ggplot(data = burg_records_sf) +
geom_sf(mapping = aes(fill = outcome), pch = 21, size = 2) +
scale_fill_viridis_d() +
theme_bw()
# Chunk 7
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
# Chunk 8
manc_sf <- st_transform(manc_sf, 4326)
# Chunk 9
ggplot(data = manc_sf) +
geom_sf()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "pink") +
labs(title = "Burglary concentrations in Manchester",
subtitle = "January 2017",
caption = "Contains OS data / crime data from police.uk",
fill = "count") +
theme_bw()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "purple") +
labs(title = "Burglary concentrations in Manchester",
subtitle = "January 2017",
caption = "Contains OS data / crime data from police.uk",
fill = "count") +
theme_bw()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "darkred") +
labs(title = "Burglary concentrations in Manchester",
subtitle = "January 2017",
caption = "Contains OS data / crime data from police.uk",
fill = "count") +
theme_bw()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "crimson") +
labs(title = "Burglary concentrations in Manchester",
subtitle = "January 2017",
caption = "Contains OS data / crime data from police.uk",
fill = "count") +
theme_bw()
ggplot(data = manc_sf) +
geom_sf(mapping = aes(fill = brglry_)) +
scale_fill_continuous(low = "snow", high = "firebrick3") +
labs(title = "Burglary concentrations in Manchester",
subtitle = "January 2017",
caption = "Contains OS data / crime data from police.uk",
fill = "count") +
theme_bw()
# =============================================================
library(tidyverse)
library(sf)
setwd("C:/Users/langt/Documents/OneDrive - MMU/Lenovo/Teaching/Teaching/UofM/UKDataService/data/original")
# =============================================================
# =============================================================
# Greater Manchester crime data for Jan-Dec 2017, downloaded from data.police.uk
# Load and merge crime data, subset for burglary, aggregate to LSOA
dfs <- list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
full.crime.raw <- bind_rows(dfs)
full.crime <- full.crime.raw %>%
mutate(crime_id = 1:nrow(full.crime.raw)) %>%
select(crime_id, Month, `LSOA code`, `LSOA name`, `Crime type`) %>%
rename(LSOAcode = `LSOA code`,
LSOAname = `LSOA name`,
crime_type = `Crime type`) %>%
drop_na()
lsoa.crime <- full.crime %>%
filter(crime_type == "Burglary") %>%
group_by(LSOAcode) %>%
tally(name = "burglary_count")
# Load in latest IMD data
imd <- read_csv("imd/eng_imd19_lsoa.csv")
# subset
imd.sub <- imd %>%
select(`LSOA code (2011)`,
`Local Authority District name (2019)`,
`Index of Multiple Deprivation (IMD) Score`,
`Index of Multiple Deprivation (IMD) Rank (where 1 is most deprived)`,
`Index of Multiple Deprivation (IMD) Decile (where 1 is most deprived 10% of LSOAs)`,
`Income Score (rate)`) %>%
rename(LSOAcode = `LSOA code (2011)`,
LAname   = `Local Authority District name (2019)`,
IMDscore = `Index of Multiple Deprivation (IMD) Score`,
IMDrank  = `Index of Multiple Deprivation (IMD) Rank (where 1 is most deprived)`,
IMDdeci  = `Index of Multiple Deprivation (IMD) Decile (where 1 is most deprived 10% of LSOAs)`,
incscore = `Income Score (rate)`)
# Merge with GM crime data, so removing all others
lsoa.crime.imd <- left_join(lsoa.crime, imd.sub)
# Keep only GM
gm.names <- c("Bolton", "Bury", "Rochdale", "Salford", "Stockport", "Tameside", "Trafford",
"Oldham", "Wigan", "Manchester")
lsoa.crime.imd <- lsoa.crime.imd %>%
filter(LAname %in% gm.names)
pop.df <- read_csv("C:/Users/langt/Documents/OneDrive - MMU/Lenovo/PhD_project/PhD_project/data/pop_estimates/all_lsoa_pop_est.csv")
lsoa.crime.imd <- left_join(lsoa.crime.imd, pop.df)
lsoa.crime.imd.qgis <- lsoa.crime.imd %>%
select(-burglary_count)
write_csv(x = lsoa.crime.imd, path = "C:/Users/langt/Documents/GitHub/qgis_intro/data/gm_demographics.csv")
write_csv(x = lsoa.crime.imd, path = "C:/Users/langt/Documents/GitHub/qgis_intro/data/gm_demographics.csv")
england.lsoa.sf <- st_read("C:/Users/langt/Documents/OneDrive - MMU/Lenovo/PhD_project/PhD_project/data/uk_shapefiles/england_lsoa_2011/england_lsoa_2011_gen_clipped.shp")
list.lsoa <- lsoa.crime.imd.qgis$LSOAcode
names(england.lsoa.sf)
gm.lsoa.sf <- england.lsoa.sf %>%
filter(code %in% list.lsoa)
ggplot(gm.lsoa.sf) + st_geom()
ggplot(gm.lsoa.sf) + geom_sf()
gm.lsoa.sf <- england.lsoa.sf %>%
filter(code %in% list.lsoa) %>%
rename(LSOAcode = code)
gm.lsoa.sf <- left_join(gm.lsoa.sf, england.lsoa.sf)
gm.lsoa.sf <- left_join(gm.lsoa.sf, lsoa.crime.imd.qgis)
ggplot(gm.lsoa.sf) + geom_sf(aes(fill = IMDdeci))
st_write(obj = gm.lsoa.sf, dsn = "C:/Users/langt/Documents/GitHub/qgis_intro/data/gm_lsoa.shp",
driver = "ESRI Shapefile")
names(gm.lsoa.sf)
ggplot(gm.lsoa.sf) + geom_sf(aes(fill = LAname))
# =============================================================
library(tidyverse)
library(sf)
setwd("C:/Users/langt/Documents/OneDrive - MMU/Lenovo/Teaching/Teaching/UofM/UKDataService/data/original")
# =============================================================
# =============================================================
# Greater Manchester crime data for Jan-Dec 2017, downloaded from data.police.uk
# Load and merge crime data, subset for burglary, aggregate to LSOA
dfs <- list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
full.crime.raw <- bind_rows(dfs)
full.crime <- full.crime.raw %>%
mutate(crime_id = 1:nrow(full.crime.raw)) %>%
select(crime_id, Month, `LSOA code`, `LSOA name`, `Crime type`) %>%
rename(LSOAcode = `LSOA code`,
LSOAname = `LSOA name`,
crime_type = `Crime type`) %>%
drop_na()
lsoa.crime <- full.crime %>%
filter(crime_type == "Burglary") %>%
group_by(LSOAcode) %>%
tally(name = "burglary_count")
# Load in latest IMD data
imd <- read_csv("imd/eng_imd19_lsoa.csv")
# subset
imd.sub <- imd %>%
select(`LSOA code (2011)`,
`Local Authority District name (2019)`,
`Index of Multiple Deprivation (IMD) Score`,
`Index of Multiple Deprivation (IMD) Rank (where 1 is most deprived)`,
`Index of Multiple Deprivation (IMD) Decile (where 1 is most deprived 10% of LSOAs)`,
`Income Score (rate)`) %>%
rename(LSOAcode = `LSOA code (2011)`,
LAname   = `Local Authority District name (2019)`,
IMDscore = `Index of Multiple Deprivation (IMD) Score`,
IMDrank  = `Index of Multiple Deprivation (IMD) Rank (where 1 is most deprived)`,
IMDdeci  = `Index of Multiple Deprivation (IMD) Decile (where 1 is most deprived 10% of LSOAs)`,
incscore = `Income Score (rate)`)
# Merge with GM crime data, so removing all others
lsoa.crime.imd <- left_join(lsoa.crime, imd.sub)
# Keep only GM
gm.names <- c("Bolton", "Bury", "Rochdale", "Salford", "Stockport", "Tameside", "Trafford",
"Oldham", "Wigan", "Manchester")
lsoa.crime.imd <- lsoa.crime.imd %>%
filter(LAname %in% gm.names)
pop.df <- read_csv("C:/Users/langt/Documents/OneDrive - MMU/Lenovo/PhD_project/PhD_project/data/pop_estimates/all_lsoa_pop_est.csv")
lsoa.crime.imd <- left_join(lsoa.crime.imd, pop.df)
# write_csv(x = lsoa.crime.imd, path = "C:/Users/langt/Documents/GitHub/r_textbook/Datasets/gmp_2017.csv")
#
# for QGIS mapping
lsoa.crime.imd.qgis <- lsoa.crime.imd %>%
select(-burglary_count)
england.lsoa.sf <- st_read("C:/Users/langt/Documents/OneDrive - MMU/Lenovo/PhD_project/PhD_project/data/uk_shapefiles/england_lsoa_2011_clipped/england_lsoa_2011_clipped.shp")
list.lsoa <- lsoa.crime.imd.qgis$LSOAcode
gm.lsoa.sf <- england.lsoa.sf %>%
filter(code %in% list.lsoa) %>%
rename(LSOAcode = code)
gm.lsoa.sf <- left_join(gm.lsoa.sf, lsoa.crime.imd.qgis)
st_write(obj = gm.lsoa.sf, dsn = "C:/Users/langt/Documents/GitHub/qgis_intro/data/gm_lsoa.shp",
driver = "ESRI Shapefile")
plot(st_geometry(gm.lsoa.sf))
st_write(obj = gm.lsoa.sf, dsn = "C:/Users/langt/Documents/GitHub/qgis_intro/data/gm_lsoa.shp",
driver = "ESRI Shapefile")
