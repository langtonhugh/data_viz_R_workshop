size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
p1 +
annotate(geom = "text",
x = 0.8, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.67, xend = 0.57, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.65, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.5, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 1, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 01, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 1, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y =0.9, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.1, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.5, width = 0.2, height = 0.2,
scale = 1.5)
ggdraw() +
draw_plot(my_hexmap) +
draw_plot(my_legend,
x = 0.1, y = 0.65, width = 0.2, height = 0.2,
scale = 1.5)
p1 +
annotate(geom = "text",
x = 0.75, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.54, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm")))
p1 +
annotate(geom = "text",
x = 0.75, y = 0.3,
label = "Low income deprivation \n and low burglary",
size = 3) +
annotate(geom = "curve",
x = 0.65, xend = 0.54, y = 0.3, yend = 0.4,
curvature = -0.3,
arrow = arrow(length = unit(1, "mm"))) +
annotate(geom = "text",
x = 0.9, y = 0.8,
label = "High income deprivation \n and high burglary",
size = 3)
burglary_df <-  read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_2017.csv")
library(readr)
burglary_df <-  read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_2017.csv")
as_tibble
library(tidyverse)
as_tibble
library(readr)
library(ggplot2)
# Load data
burglary_df <- read_csv("data/gmp_2017.csv")
View(burglary_df)
# Scatter
ggplot(data = burglary_df)
# Scatter
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count))
# Scatter
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Scatter 2
ggplot(data = burglary_df)
# Scatter 2
ggplot(data = burglary_df) +
geom_point()
# Scatter 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count))
# Scatter 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point()
# Scatter 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point() +
geom_smooth(stat = "lm")
# Scatter 1
ggplot(data = burglary_df, mapping = aes(x = incscore, y = burglary_count)) +
geom_point() +
geom_smooth(method = "lm")
# Scatter 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count)) +
geom_smooth()
# Scatter 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count)) +
geom_smooth(mapping = aes(x = incscore, y = burglary_count))
# Scatter 2
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count)) +
geom_smooth(mapping = aes(x = incscore, y = burglary_count), method = "lm")
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count))
View(burglary_df)
table(burglary_df$LAname)
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, colour = LAname))
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, shape = LAname))
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, size = LAname))
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, size = LAname), alpha = 0.2)
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, colour = LAname))
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, fill = LAname))
# Scatter 3
ggplot(data = burglary_df) +
geom_point(mapping = aes(x = incscore, y = burglary_count, colour = LAname))
# Bar 1
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci))
# Bar 1 manually
burglary_counts_df <- burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n())
library(dplyr)
# Bar 1 manually
burglary_counts_df <- burglary_df %>%
group_by(IMDdeci) %>%
summarise(count = n())
View(burglary_counts_df)
ggplot(data = burglary_counts_df) +
geom_bar(mapping = aes(x = IMDdeci, y = count))
ggplot(data = burglary_counts_df) +
geom_bar(mapping = aes(x = IMDdeci, y = count), stat = "identity")
ggplot(data = burglary_counts_df) +
geom_colr(mapping = aes(x = IMDdeci, y = count))
ggplot(data = burglary_counts_df) +
geom_col(mapping = aes(x = IMDdeci, y = count))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, colour = LAname))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, fill = LAname))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, fill = LAname), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, group = LAname), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, colour = LAname), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = IMDdeci, fill = LAname), position = "dodge")
class(burglary_df$IMDdeci)
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci), fill = LAname), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.character(IMDdeci), fill = LAname), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci), fill = LAname), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci), fill = LAname), position = "dodge") +
scale_fill_brewer(palette = "Spectral")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = as.factor(IMDdeci)))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_bw()
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal()
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL)
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation deciles for Greater Manchester Local Authorities")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Greater Manchester Local Authorities",
subtitle = "Nationwide deciles")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Greater Manchester Local Authorities",
subtitle = "Deciles calculated for England")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "2019 data")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data")
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "pink"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "pink"),
plot.background = element_rect(fill = "black"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
plot.background = element_rect(fill = "black"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(alpha = 0.4))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = darkgrey))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "darkgrey"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "darkgrey"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "lightgrey"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow"))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow", size = 0.2))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow", size = 2))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow", size = 0.01))
# Bar 2
ggplot(data = burglary_df) +
geom_bar(mapping = aes(x = LAname, fill = as.factor(IMDdeci)), position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_minimal() +
labs(x = NULL, fill = NULL,
title = "Deprivation by Local Authority in Greater Manchester",
subtitle = "Deciles calculated for England",
caption = "Copyright ONS 2019 data") +
theme(text = element_text(family = "mono", colour = "white"),
axis.text = element_text(colour = "white"),
plot.background = element_rect(fill = "black"),
panel.grid = element_line(colour = "snow"))
monthly_df <- read_csv(file = "https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/gmp_monthly_2017.csv")
burg_records_df <- read_csv("https://github.com/langtonhugh/data_viz_R_workshop/raw/master/data/burglary_records.csv")
View(burg_records_df)
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
View(burg_records_df)
library(sf)
manc_sf <- st_read(dsn = "data/burglary_lsoa.shp")
View(manc_sf)
names(manc_sf)
hex_sf <- st_read(dsn = "data/geogrid_manc.shp.shp")
hex_sf <- st_read(dsn = "data/geogrid_manc.shp")
hex_sf
names(hex_sf)
names(manc_sf)
library(biscale)
ggplot(data = hex_sf) +
geom_sf(mapping = aes(fill = bi_class)) +
bi_scale_fill(pal = "GrPink", dim = 3)
manc_grid_results_sf <- bi_class(hex_sf, x = incscor, y = brglry_, style = "quantile", dim = 3)
ggplot(data = manc_grid_results_sf) +
geom_sf(mapping = aes(fill = bi_class)) +
bi_scale_fill(pal = "GrPink", dim = 3)
